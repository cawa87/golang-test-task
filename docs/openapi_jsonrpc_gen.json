{
  "openapi": "3.0.0",
  "info": {
    "title": "Service",
    "description": "Sites availability checker.",
    "version": "v1.0.0"
  },
  "paths": {
    "/getByDomain": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "c9b14c57-7503-447a-9fb9-be6f8920f31f"
                  },
                  "jsonrpc": { "type": "string", "example": "2.0" },
                  "method": { "type": "string", "enum": ["getByDomain"] },
                  "params": {
                    "type": "object",
                    "properties": {
                      "domain": {
                        "type": "string",
                        "format": "string",
                        "example": "abc"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "c9b14c57-7503-447a-9fb9-be6f8920f31f"
                    },
                    "jsonrpc": { "type": "string", "example": "2.0" },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "integer", "example": 1 },
                        "latency": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-32600": {
            "description": "Invalid Request. The JSON sent is not a valid Request object.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidRequestError" }
              }
            }
          },
          "x-32601": {
            "description": "Method not found. The method does not exist / is not available.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodNotFoundError" }
              }
            }
          },
          "x-32602": {
            "description": "Invalid params. Invalid method parameters.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidParamsError" }
              }
            }
          },
          "x-32603": {
            "description": "Internal error. Internal JSON-RPC error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalError" }
              }
            }
          },
          "x-32700": {
            "description": "Parse error. Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ParseError" }
              }
            }
          }
        }
      }
    },
    "/getCount": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "c9b14c57-7503-447a-9fb9-be6f8920f31f"
                  },
                  "jsonrpc": { "type": "string", "example": "2.0" },
                  "method": { "type": "string", "enum": ["getCount"] },
                  "params": { "type": "object", "example": null }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "c9b14c57-7503-447a-9fb9-be6f8920f31f"
                    },
                    "jsonrpc": { "type": "string", "example": "2.0" },
                    "result": { "type": "integer", "example": 1 }
                  }
                }
              }
            }
          },
          "x-32600": {
            "description": "Invalid Request. The JSON sent is not a valid Request object.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidRequestError" }
              }
            }
          },
          "x-32601": {
            "description": "Method not found. The method does not exist / is not available.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodNotFoundError" }
              }
            }
          },
          "x-32602": {
            "description": "Invalid params. Invalid method parameters.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidParamsError" }
              }
            }
          },
          "x-32603": {
            "description": "Internal error. Internal JSON-RPC error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalError" }
              }
            }
          },
          "x-32700": {
            "description": "Parse error. Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ParseError" }
              }
            }
          }
        }
      }
    },
    "/getMaxLatency": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "c9b14c57-7503-447a-9fb9-be6f8920f31f"
                  },
                  "jsonrpc": { "type": "string", "example": "2.0" },
                  "method": { "type": "string", "enum": ["getMaxLatency"] },
                  "params": { "type": "object", "example": null }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "c9b14c57-7503-447a-9fb9-be6f8920f31f"
                    },
                    "jsonrpc": { "type": "string", "example": "2.0" },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "integer", "example": 1 },
                        "domain": {
                          "type": "string",
                          "format": "string",
                          "example": "abc"
                        },
                        "latency": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-32600": {
            "description": "Invalid Request. The JSON sent is not a valid Request object.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidRequestError" }
              }
            }
          },
          "x-32601": {
            "description": "Method not found. The method does not exist / is not available.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodNotFoundError" }
              }
            }
          },
          "x-32602": {
            "description": "Invalid params. Invalid method parameters.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidParamsError" }
              }
            }
          },
          "x-32603": {
            "description": "Internal error. Internal JSON-RPC error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalError" }
              }
            }
          },
          "x-32700": {
            "description": "Parse error. Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ParseError" }
              }
            }
          }
        }
      }
    },
    "/getMinLatency": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "c9b14c57-7503-447a-9fb9-be6f8920f31f"
                  },
                  "jsonrpc": { "type": "string", "example": "2.0" },
                  "method": { "type": "string", "enum": ["getMinLatency"] },
                  "params": { "type": "object", "example": null }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "c9b14c57-7503-447a-9fb9-be6f8920f31f"
                    },
                    "jsonrpc": { "type": "string", "example": "2.0" },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "integer", "example": 1 },
                        "domain": {
                          "type": "string",
                          "format": "string",
                          "example": "abc"
                        },
                        "latency": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-32600": {
            "description": "Invalid Request. The JSON sent is not a valid Request object.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidRequestError" }
              }
            }
          },
          "x-32601": {
            "description": "Method not found. The method does not exist / is not available.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodNotFoundError" }
              }
            }
          },
          "x-32602": {
            "description": "Invalid params. Invalid method parameters.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidParamsError" }
              }
            }
          },
          "x-32603": {
            "description": "Internal error. Internal JSON-RPC error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalError" }
              }
            }
          },
          "x-32700": {
            "description": "Parse error. Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ParseError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InternalError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": { "type": "integer", "example": -32603 },
              "message": { "type": "string", "example": "Internal error" }
            }
          },
          "id": {
            "type": "string",
            "example": "1f1ecd1b-d729-40cd-b6f4-4011f69811fe"
          },
          "jsonrpc": { "type": "string", "example": "2.0" }
        }
      },
      "InvalidParamsError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": { "type": "integer", "example": -32602 },
              "message": { "type": "string", "example": "Invalid params" }
            }
          },
          "id": {
            "type": "string",
            "example": "1f1ecd1b-d729-40cd-b6f4-4011f69811fe"
          },
          "jsonrpc": { "type": "string", "example": "2.0" }
        }
      },
      "InvalidRequestError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": { "type": "integer", "example": -32600 },
              "message": { "type": "string", "example": "Invalid Request" }
            }
          },
          "id": {
            "type": "string",
            "example": "1f1ecd1b-d729-40cd-b6f4-4011f69811fe"
          },
          "jsonrpc": { "type": "string", "example": "2.0" }
        }
      },
      "MethodNotFoundError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": { "type": "integer", "example": -32601 },
              "message": { "type": "string", "example": "Method not found" }
            }
          },
          "id": {
            "type": "string",
            "example": "1f1ecd1b-d729-40cd-b6f4-4011f69811fe"
          },
          "jsonrpc": { "type": "string", "example": "2.0" }
        }
      },
      "ParseError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": { "type": "integer", "example": -32700 },
              "message": { "type": "string", "example": "Parse error" }
            }
          },
          "id": {
            "type": "string",
            "example": "1f1ecd1b-d729-40cd-b6f4-4011f69811fe"
          },
          "jsonrpc": { "type": "string", "example": "2.0" }
        }
      }
    }
  }
}
